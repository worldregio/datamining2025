---
title: "API : Exercices"
author: "Claude Grasland"
date: "2025-02-11"
date-format: iso
lang: fr
format:
  html:
    embed-resources: true
    smooth-scroll: true
    fontsize: 0.9em
    toc: true
    toc-depth: 3
    toc-title: "."
    crossrefs-hover: false
    theme: [yeti, style.scss]
execute:
  warning: false
  message: false 
knitr:
  opts_chunk:
    out.width: "100%"
editor_options: 
  chunk_output_type: console
editor: 
  markdown: 
    wrap: 72
---



Télécharger le [dossier projet](https://github.com/worldregio/datamining2025/raw/main/exos/exo1.zip)



Commencez par reprendre une série d'exercices d'application du cours du chapitre précédent en allant des applications les plus simples au plux complexes. 



Vous pouvez ensuite essayer tout seul de travailler sur  les **demandes de valeurs foncières géoloalisées** que l'on peut trouver sur le site [public.opendatasoft](https://public.opendatasoft.com/) 


## Etape 1 : Récupération et analyse d'un tableau unique

### Problème
Essayez de récupérer à l'aide d'une API les informations sur l'ensemble des **ventes** immobilières de **maisons**  de la commune de Montcuq-en-Quercy-Blanc (**code INSEE = 46201**) au cours de l'**année 2020**.  Vous devez ensuite 

- Afficher les premières lignes du tableau des ventes de maisons à Moncuq en en 2020
- Calculer le nombre de ventes et leur prix moyen au m2
- Réaliser un histogramme du prix moyen de ces ventes sur lequel figureront le nombre de ventes et le prix moyen. 


### Solution
Vous devez obtenir les résultats suivants :


```{r, echo=FALSE, warning=F, message = F}

library(tidyverse, quietly = T, warn.conflicts=F)
library(jsonlite,quietly = T)
library(knitr)


link<-"https://public.opendatasoft.com/api/explore/v2.1/catalog/datasets/buildingref-france-demande-de-valeurs-foncieres-geolocalisee-millesime/exports/json?lang=fr&refine=type_local%3A%22Maison%22&refine=com_code%3A%2246201%22&refine=date_mutation%3A%222020%22&facet=facet(name%3D%22date_mutation%22%2C%20disjunctive%3Dtrue)&facet=facet(name%3D%22type_local%22%2C%20disjunctive%3Dtrue)&timezone=Europe%2FParis"



don<-fromJSON(link)



don<-don %>% select(Date = date_mutation,
                    Commune = com_name,
                    Code = com_code,
                    Surf_hab = surface_reelle_bati,
                    Surf_ter = surface_terrain,
                    Prix = valeur_fonciere) %>% 
  mutate(Prix_m2 = Prix/Surf_hab) %>%
  arrange(Date)

kable(head(don), digits=0,label = "Extrait du tableau de données")

nbventes = dim(don)[1]
moy = mean(don$Prix_m2)
message<-paste0("Il ya eu ",nbventes, " ventes au prix moyen de ",round(moy,0)," €/m2")
print(message)


hist(don$Prix_m2, 
     main="Prix de ventes au m2 des maisons à Moncuq en 2020",
     breaks=10,
     xlab="prix au m2",
     ylab="nombre de ventes",
     col="lightyellow")
abline(v=moy, col="red", lwd=2)
```


## Etape 2 : Tableau de bord d'une commune

### Problème
Essayez de récupérer à l'aide d'une API les informations sur l'ensemble des **ventes** immobilières de **maisons ou d'appartement**  de la commune de Sucy-en-Brie (Code INSEE = 94071)

1. Simplifiez le tableau pour ne garder que les variables suivantes 
  - date : date de la transaction
  - code : code INSEE de la commune
  - bien : type de bien (maison ou appartement)
  - nom : nom de la commune
  - prix : prix de vente total
  - surf : surface habitable
  - prixm2 : prix au m2
  
2. Nettoyer le tableau en retirant les transactions dont le prix au m2 est supérieur à 10000€

2. Créez un tableau montrant l'évolution par année des prix médian au m2 des maisons et des appartements.

3. Créez un graphique montrant l'évolution mensuelle des prix au m2 des maisons et des appartements. 



### Solution
Vous devez obtenir les résultats suivants :


```{r, echo=FALSE, warning=F, message = F}

library(tidyverse, quietly = T, warn.conflicts=F)
library(jsonlite,quietly = T)
library(ggplot2)
library(knitr)


link<-"https://public.opendatasoft.com/api/explore/v2.1/catalog/datasets/buildingref-france-demande-de-valeurs-foncieres-geolocalisee-millesime/exports/json?lang=fr&refine=com_code%3A%2294071%22&timezone=Europe%2FParis"



don<-fromJSON(link)



## (1) Extraction du tableau
sel<-don %>% select(date = date_mutation,
                    code = com_code,
                    nom = com_name,
                    bien = type_local,
                    prix = valeur_fonciere,
                    surf = surface_reelle_bati
                    ) %>% 
  filter(bien %in% c("Maison","Appartement")) %>%
  mutate(prix_m2 = prix/surf) %>%
  filter(prix_m2 <10000) %>%
  arrange(date)

kable(head(sel), digits=0,label = "Extrait du tableau de données")

## (2) Tableau des prix au m2 par année et type de bien
tab <- sel %>% mutate(annee = substr(date,1,4)) %>%
               group_by(annee, bien) %>%
               summarize(prix_m2 = median(prix_m2, na.rm=T))  %>%
               pivot_wider(names_from=bien, values_from=prix_m2)

kable(head(tab), digits=0,caption = "Prix médian de vente des maisons et appartement (en €/m2)", col.names = c("Année", "Ventes d'appartements", "Ventes de maisons"))

## (3) Graphique de l'évolution mensuelle des ventes
tab2 <- sel %>% mutate(date=as.Date(date),
              mois = cut(date, breaks="month") )%>%
               group_by(mois, bien) %>%
               summarize(prix_m2 = median(prix_m2, na.rm=T)) %>%
               mutate(mois = as.Date(mois))

 ggplot(tab2) + aes(x=mois, y=prix_m2, color=bien)+ 
                geom_line() + 
                geom_smooth() +
                scale_x_date("Mois de vente") +
                scale_y_continuous("Prix de vente au m2 (médiane)")




```


## Etape 3 : Automatisation 

Ecrivez le progamme de l'exercice 2 sous la forme d'une fonction prenant en entrée le code INSEE d'une commune quelconque. 

