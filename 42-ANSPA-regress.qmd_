---
title: "Régression spatiale"
author: "Claude Grasland"
format: html
embed-resources: true
editor_options: 
  chunk_output_type: inline
---

```{r  echo=FALSE, cache=FALSE, warning=FALSE}
library(knitr)
## Global options
options(max.print="80")
opts_chunk$set(echo=TRUE,
               cache=FALSE,
               prompt=FALSE,
               tidy=FALSE,
               comment=NA,
               message=FALSE,
               warning=FALSE,
               options(scipen=999))
opts_knit$set(width=75)



```

## INTRODUCTION

### Objectifs

Cette séance va permettre :

-   de revoir plus en détail le concept de **potentiel** en utilisant le package R potential qui en facilite le calcul et la cartographie.

-   de revoir les modèles de **régression multiple** et de **régression Poisson** en les appliquant à la prédiction du nombre de clubs de sport présents ou absent d'une commune.

-   de mélanger des variables explicatives de type **endogène** (caractéristiques internes de la commune) et **exogènes** (situation de la commune par rapport aux espaces envrionnants)

### Chargement des packages

L'installation est a priori la même que dans les sessions précédentes. On reprend juste pour mémoire la liste, à l'intention de ceux qui n'auraient pas suivi la séance précédente. On y ajoute un package pour le calcul de potentiel (`potential`) et un autre pour l'analyse des résultats de régression (`car`)

```{r}
library(knitr)
library(dplyr)

library(sf)
library(mapsf)
library(RColorBrewer)
library(leaflet)
library(htmlwidgets)
library(htmltools)

library(ggplot2)
library(plotly)


library(potential)
library(car)

```

## DONNEES

On reprend les trois jeux de données précédents en y ajoutant les deux bases de données sur le nombre de licences et le nombre de clubs présents dans chaque commune.

```{r}
## Contour des communes
com<-readRDS("ParisPC/mapcom_parisPC.RDS")

## Population sur grille de 200 m
gri<-readRDS("ParisPC/gridpop_parisPC.RDS")

## Equipements localisés en latitude longitude
equ<-readRDS("ParisPC/equip_ParisPC.RDS") 

## Nombre de licences
lic <- readRDS("ParisPC/lic2018_ParisPC.RDS")

## Nombre de clubs
clu <-readRDS("ParisPC/clu2018_ParisPC.RDS")

```

### Tableau de variables endogènes

On extrait de chaque fichier les informations relatives au sport retenu pour l'analyse et on centralise les résultats dans le fichier communal. On choisit de travailler sur l'exemple du football en prenant comme code de fédération 111 et comme code d'équipement 2802.

```{r}
# Zone d'étude
tabcom <- st_drop_geometry(com)

# Extraction des clubs
myfede<-c("111")
myclu<- clu %>% filter(code_federation %in% myfede) %>%
                select(insee_com, nbclu =clubs_sportifs_2018)

# Extraction des licences du sport choisi
myfede<-c("111")
mylic<- lic %>% filter(code_fed %in% myfede) %>%
                group_by(insee_com) %>%
                summarise(nblic=sum(nblic))

# Extraction du nombre total de licences
lictot<- lic %>%  group_by(insee_com) %>%
                  summarise(lictot=sum(nblic))

# Extraction des équipements
typequ <- c("2802")
myequ <- equ %>% st_drop_geometry() %>%
                 filter(typ_code %in% typequ) %>%
                  group_by(insee_com) %>%
                  summarise(nbequ=n())

# Variables socio-eco
soceco<- gri %>% st_drop_geometry() %>%
                group_by(insee_com) %>%
                summarise(Ind = sum(Ind),
                          Men = sum(Men),
                          Men_pauv = sum(Men_pauv),
                          Ind_snv = sum(Ind_snv)) %>%
                mutate(pop = Ind,
                       men = Men,
                       txpauv = 100*Men_pauv/Men,
                       revhab = Ind_snv/Ind) %>%
                select(insee_com, pop,men, txpauv, revhab)
  

# Assemblage des tableaux
tabcom<- tabcom %>% left_join(soceco) %>%
                    mutate(denpop = pop/sup) %>%
                    left_join(lictot) %>%
                    left_join(mylic) %>%
                    mutate(pctlic = 100*nblic/lictot) %>%
                    left_join(myclu) %>%  
                    left_join(myequ) %>%
                     arrange(insee_com)

# Remplacement des NA par des 0
tabcom$nbclu[is.na(tabcom$nbclu)]<-0
tabcom$nblic[is.na(tabcom$nblic)]<-0
tabcom$nbequ[is.na(tabcom$nbequ)]<-0

# données + fonds de carte
mapcom <-left_join(com, tabcom)

```

## CARTOGRAPHIE

Prenons l'exemple d'une cartographie du nombre de licenciés (stock) et de la part du total des licences (taux).

### Avec mapsf

Normalement vous connaissez toutes les fonctions utilisez. Bien noter le changement de projection de la carte en crs = 2154.

```{r}
mapcom<-mapcom %>% st_transform(2154)

mapdep<-mapcom %>% group_by(dept) %>% 
                summarise()

# Choix des classes 
    mybreaks<-c(0, 1,2,4,8,16,32,100)
# Choix de la palette 
    mypal<-brewer.pal(7, "RdYlBu")

# Carte de taux (choroplethe)
mf_map(mapcom, type="choro",
       var="pctlic",
       breaks= mybreaks,
       pal=mypal,
       border="white",
       lwd=0.5,
       leg_title = "% total licence",
       leg_val_rnd = 0,
       leg_pos = "topright")

# Ajout des départements
mf_map(mapdep, type="base",
       col=NA,
       border="black",
       lwd=1,
       add=T )

# Carte de stock (proportionelle)
mf_map(mapcom, typ = "prop",
       var = "nblic",
       inches = 0.05,
       col="gray50",
       leg_title = "nombre de licences",
       leg_pos = "topleft")

# Cadre, titre, ..
mf_layout(title = "Distribution des licences de golf dans Paris PC",
          credits = "Source : INSEE et Min. des Sports",
          frame = T,
          arrow=F,
          scale=T)


```

### Avec leaflet

Programme plus compliqué ... mais qui permet d'aboutir au même résultat avec une carte interactive. Noter que la projection n'est pas modifiée et demeure crs = 4326.

```{r}
map<-mapcom %>% select(dept,insee_com, nom_com, nblic, pctlic ) %>% st_transform(4326)
map$lng<-st_coordinates(st_centroid(map))[,1]
map$lat<-st_coordinates(st_centroid(map))[,2]

mapdep<-mapcom %>% group_by(dept) %>% 
                summarise() %>%
                st_transform(4326)


# Choix de la variable
   myvar <-map$pctlic
# Choix des classes 
    mybreaks<-c(0, 1,2,4,8,16,32,100)
# Choix de la palette (c'est une fonction !)
   mypal <- colorBin('RdYlBu', 
                       myvar,
                       bins=mybreaks)
  
# Calcul du diamètre des cercles
   myradius <-8*sqrt(map$nblic/max(map$nblic, na.rm=T))  
   
# Préparation des popups
      mypopups <- lapply(seq(nrow(map)), function(i) {
      paste0(  paste("Commune               : ",map$nom_com[i]), '<br>',
               paste("Code INSEE           : " ,map$insee_com[i]), '<br>', 
               paste("Nb. de licences        : " ,map$nblic[i]), '<br>', 
               paste("% total licence    :", round(map$pctlic[i],1))
            ) 
            })
      mypopups<-lapply(mypopups, htmltools::HTML)





map <- leaflet() %>% 
            addProviderTiles('Esri.WorldTopoMap') %>%

  # Réalisation de la carte choroplèthe
            addPolygons(data = map,
                        fillColor = ~mypal(pctlic),
                        fillOpacity = 0.5,
                        color = "white",
                        popup = mypopups,
                        weight = 1,
                        highlightOptions = highlightOptions(weight = 3, color = 'green')) %>%

  # Ajout de la carte des départements
              addPolygons(data = mapdep,
                        fill = FALSE,
                        color = "black",
                        weight = 2) %>%

  # Ajout de la carte de stocks    
               addCircleMarkers(data=map,
                              lat = ~lat,
                              lng = ~lng,
                              radius = myradius,
                              stroke = FALSE,
                              label = ~nblic,
                              fillColor = "gray50",
                              fillOpacity = 0.5)%>%
   
  # Ajout de la légende 
            addLegend(data = map,
                      pal = mypal, 
                      title = "% licences",
                      values = ~pctlic, 
                      position = 'topright') 



map

```

## REGRESSION LINEAIRE

On va ici un modèle de régression n'utilisant que des variables endogènes (internes aux communes). On essaye de modéliser Y = % de licences pour le sport considéré

### Choix des variables

Au vu de la carte précédente, on peut penser à plusieurs variables explicatives et faire des hypothèses sur le résultat attendu

-   X1 : densité de population (relation positive car il faut de la place pour installer un terrain de football)
-   X2 : revenu moyen par habitant (relation négative car les riches pratiquent plutôt des sports d'élites ce qui n'est pas le cas du football)
-   X3 : % de ménages pauvres (relation positive car le football est considéré à tort ou à raison comme un outil de promotion sociale)

On crée un tableau avec Y, X1, X2, X3

```{r}
don<-tabcom %>% select(insee_com, nom_com, Y=pctlic, X1=denpop, X2=revhab,X3=txpauv)
head(don)
```

### Analyse des corrélations

On analyse la matrice de corrélation :

```{r}
cor(don[,3:6])
```

On vérifie la forme des relations et on teste leur significativité

-   **Densité de population**

```{r}
scatterplot(don$X1,don$Y)
cor.test(don$X1,don$Y)
```

-   **Richesse par habitant**

```{r}
scatterplot(don$X2,don$Y)
cor.test(don$X2,don$Y)
```

-   **% ménages pauvres**

```{r}
scatterplot(don$X3,don$Y)
cor.test(don$X3,don$Y)
```

Toutes les variables affichent des corrélations linéaires significatives ! Mais on note que la forme des relations n'est pas forcément linéaire. On y reviendra ...

### Modélé additif

On teste le modèle additif suivant

$Y = a_0+a_1.X_1+a_2.X_2+a_3.X_3+ \epsilon$

```{r}
modlin<-lm(Y ~ X1 + X2 + X3, data=don)
summary(modlin)
anova(modlin)
```

-   **Conclusion** : toutes les variables sont significatives et affichent les signes attendus. L'analyse de variance montre cependant que c'est la variable X2 (revenu par habitant) qui est la plus déterminante. La qualité de l'ajustement est élevée (r2 = 76%)

### Modèle multiplicatif

Essayons maintenant un modèle multiplicatif de la forme

$log(Y) = a_0+a_1.X_1+a_2.X_2+a_3.X_3+ \epsilon$

qui correspond à une forme multiplicative de l'effet des variables puisque l'on a :

$Y = exp(a_0+a_1.X_1+a_2.X_2+a_3.X_3+ \epsilon)$

et donc :

$Y = exp(a_0).exp(a_1.X_1).exp(a_2.X_2).exp(a_3.X_3)$

```{r}
modexp<-lm(log(Y) ~ X1 + X2 + X3, data=don)
summary(modexp)
```

-   **Conclusion** : Pas de différences dans le signe des coefficients et leur significativité. Mais la qualité de l'ajustement est plus élevée (r2 = 79%) ce qui signifie que le modèle multiplicatif décrit plus fidèlement les effets constatés.

## POTENTIELS

On va maintenant utiliser le package **potential** pour créer des variables de type exogène mesurant la distribution des indicateurs non pas dans la commune mais dans le voisinage de celle-ci.

### Potentiel d'équipement

```{r}
# Extraction des équipements et projection 2154
typequ <- c("2802")
myequ <- equ %>%filter(typ_code %in% typequ) %>%
                  mutate(nb = 1) %>%
                  st_transform(2154)

# projection des communes en 2154
mapcom <- mapcom %>% st_transform(2154)

# Distance communes-équipement
dist<-create_matrix(myequ,mapcom)

# calcul du potentiel
mapcom$pot_equ_2000<-potential(x=myequ,   # Ressources
                               y=mapcom,  # Population
                               d=dist,    # Distance population x Ressources
                               var = "nb", # Quantité de ressource
                               fun="e",    # famille exponentielle
                               span = 2000, # distance ou f(Dij) = 0.5
                               beta=2)      # Exposant de la distance


# Cartographie du résultat
mf_map(mapcom, type="choro",var="pot_equ_2000")
mf_map(myequ, type="base",add=T,col="red")


```

-   **Commentaire** : La carte montre que les arrondissements du centre de Paris qui ne disposent pas de terrain de football ont cependant un potentiel d'acès à ceux-ci dans un voisinage gaussien de 2 km.

### Potentiel de licences

```{r}
# Extraction des licences projection 2154
maplic<-mapcom%>% select(nblic) %>%st_transform(2154)

# projection des communes en 2154
mapcom <- mapcom %>% st_transform(2154)

# Distance communes-équipement
dist<-create_matrix(maplic,mapcom)

# calcul du potentiel
mapcom$pot_lic_2000<-potential(x=maplic,y=mapcom,d=dist,var = "nblic", fun="e",span = 2000,beta=2)

# Cartographie du résultat
mf_map(mapcom, type="choro",var="pot_lic_2000")
mf_map(maplic, type="prop",var="nblic",col="red", inches=0.05)


```

-   **Commentaire** : La carte montre que le potentiel de sportifs ayant une licence de football est maximale dans les arrondissements périphériques de Paris et dans la banlieue Nord.

## REGRESSION DE POISSON

On va construire un modèle de régression de Poisson pour prévoir le potentiel de clubs du potentiel d'équipement et de son potentiel de licence.

### Choix des variables

Le tableau comporte uniquement des stocks et des potentiels

Y : nombre de clubs X1a : nombre d'équipements dans la commune X1b : potentiel d'équipement dans un voisinage gaussien de 2.5km X2a : nombre de joueurs ayant une licence dans la commune X2b : potentiel de joueurs ayant une licence dans un voisinage gaussien de 2.5km

On crée un tableau avec Y, X1a, X1b X2a,X2b

```{r}
don<-mapcom %>% select(insee_com, nom_com, 
                       Y=nbclu, 
                       X1a = nbequ,
                       X1b = pot_equ_2000, 
                       X2a = nblic,
                       X2b = pot_lic_2000) %>%
  st_drop_geometry()
head(don)
```

### Analyse des corrélations

On analyse la matrice de corrélation :

```{r}
cor(don[,3:7])
```

On vérifie la forme des relations et on teste leur significativité

-   **Equipement de la commune**

```{r}
scatterplot(don$X1a,don$Y)
cor.test(don$X1a,don$Y)
```

-   **Potentiel d'équipement dans le voisinage de la commune**

```{r}
scatterplot(don$X1b,don$Y)
cor.test(don$X1b,don$Y)
```

-   **Nombre de licences dans la commune**

```{r}
scatterplot(don$X2a,don$Y)
cor.test(don$X2a,don$Y)
```

-   **Potentiel de licences dans le voisinage de la commune**

```{r}
scatterplot(don$X2b,don$Y)
cor.test(don$X2b,don$Y)
```

### Modèle

On teste le modèle suivant :

$Y = exp(\alpha+\beta_{1a}.X_{1a}+\beta_{1b}.X_{1b}+\beta_{2a}.X_{2a}+\beta_{2b}.X_{2b} +\epsilon)$

On emploie une régression de Poisson car le nombre de clubs est une variable quantitative discrète composée d'entier. On suppose qu'elle obéit à une loi de Poisson et on vérifie si c'est exact en comparant la moyenne et l'écart-type de Y.

```{r}
mean(don$Y)
sd(don$Y)
```

Des tests plus précis pourraient être utilisés mais dans le cas présent on voit que les deux valeurs sont très proche et qu'il est acceptable de considérer que le nombre de club obéit bien à une loi de Poisson.

```{r}
modpoi<-glm(Y ~ X1a + X1b + X2a + X2b, data=don, family="poisson")
summary(modpoi)
Anova(modpoi,type="III")
```

### Discussion

Les quatre facteurs conditionnent bien l'apparition des clubs de football dans les communes et sont tous significatifs. Le nombre de terrain de football dans la commune a un effet positif sur l'apparition d'un ou plusieurs club dans la commune ce qui parait logique. Par contre la quantité de terrains de football dans les communes voisines a un effet négatif ce qui peut se comprendre comme un effet de concurrence. Quant au nombre de personnes détenant une licence, il a un effet positif à la fois dans la commune et dans les communes voisines.

La régression de Poisson n'offre pas directement de qualité d'ajustement comme dans le cas de la régression par la méthode des moindres carrés ordinaires. On peut néanmoins calculer un pseudo-R2 dit de Mc Fadden en calculant la part de déviance expliquée c'est-à-dire en effectuant le calcul suivant :

$R^2_{McFadden} = \frac{NullDeviance-ResidualDeviance}{NullDeviance}$

```{r}
(417.02-121.44)/(417.02)
```

Dans notre exemple on trouve un $R^2$ de Mc Fadden d'environ 71% ce qui est très satisfaisant et montre que la connaissance de la localisation des terrains et des licences permet dans une large mesure de prédire le nombre de clubs présents dans une commune.

## PROLONGEMENTS

Pour en savoir plus sur les modèles de régression, le plus simple est de partir du petit billet [introduction au GLM](https://delladata.fr/introduction-aux-glm/) de Claire Della Vedova qui explique bien la différence entre le modèle linéaire classique et les modèles de régression logistique ou de régression de Poisson.

Ensuite ... il faudra s'attaquer à un bon manuel de statistiques. Nous recommandons celui de Daniel J. Denis [Univariate, Bivariate Multivariate Statistics using R](https://www.ebay.fr/itm/175820688079) qui est très pédagogique et fournit les programmes d'application en R ou en Python.
